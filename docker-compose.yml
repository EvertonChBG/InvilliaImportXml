version: "3.3"
services:
  app:
    container_name: import_xml_app
    #restart: always
    tty: true
    working_dir: /var/www/app
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./src/:/var/www/app
    depends_on:
      - database
    links:
      - database
    networks:
      - import_xml_network

  database:
    image: postgres:13-alpine
    container_name: import_xml_database
    #restart: always
    tty: true
    environment:
      - POSTGRES_DB=db_app
      - POSTGRES_USER=db_user
      - POSTGRES_PASSWORD=123465
    ports:
      - 5432:5432
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - import_xml_network

  server:
    image: nginx:alpine
    container_name: import_xml_server
    #restart: always
    tty: true
    ports:
      - 8100:8080
    volumes:
      - ./src/:/var/www/app
      - ./.docker/nginx.conf:/etc/nginx/conf.d/default.conf
    working_dir: /var/www
    depends_on:
      - app
    networks:
      - import_xml_network

  composer:
    image: "composer"
    volumes:
      - ./src/:/app
    command: install
    depends_on:
      - app

  scheduler:
    container_name: import_xml_scheduler
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    working_dir: /var/www/app
    command: /bin/bash -c 'while true ; do php artisan schedule:run; sleep 30 ; done'
    depends_on:
      - database
    networks:
      - import_xml_network
    volumes:
      - ./src/:/var/www/app

networks:
  import_xml_network:
    driver: bridge
volumes:
  dbdata:
